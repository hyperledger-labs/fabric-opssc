# Default values for opssc-api-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Replica count, currently only `1` is assumed
replicaCount: 1

image:
  # -- opssc-api-server image repository
  repository: fabric-opssc/opssc-api-server
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- opssc-api-server image tag
  # (Overrides the image tag whose default is the chart appVersion)
  tag: latest

# -- Image pull secrets
imagePullSecrets: []

# -- Override the name of resources
nameOverride: ""

# -- Override the full name of resources
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- Security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- k8s service type exposing ports (e.g., ClusterIP)
  type: ClusterIP
  # -- TCP port
  port: 5000

ingress:
  # -- If true, Ingress will be created
  enabled: false
  # -- Ingress class name
  className: ""
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress hostnames
  hosts:
    # -- Ingress host name
    - host: opssc-api-server.local
      paths:
        # -- Ingress path
        - path: /
          # -- Ingress path type
          pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: opssc-api-server-tls
  #    hosts:
  #      - opssc-api-server.local

# -- MSP ID for the organization to be operated
adminMSPID: Org1MSP

# -- Log level
logLevel: "info"

# -- Whether to discover as localhost
discoverAsLocalhost: false

websocket:
  # -- Whether to enable WebSocket server to receive messages from agents or the API server itself
  enabled: true

api:
  # -- Whether to enable the Channel Proposal APIs
  channelProposalEnabled: true
  # -- Whether to enable the Utility APIs
  utilEnabled: true

# -- Channel name for the OpsSC
opsscChannelName: "ops-channel"
# -- Chaincode name of the channel OpsSC
opsscChannelOpsCCName: "channel-ops"
# -- Chaincode name of the chaincode OpsSC
opsscChaincodeOpsCCName: "chaincode-ops"

secrets:
  # -- Connection profile config name (TODO: Should be improved)
  connectionProfileName: fabric-rest-sample-config
  # -- Connection profile item key name, the value should be a JSON or YAML-based connection profile file
  connectionProfileItemKeyName: HLF_CONNECTION_PROFILE_ORG1

  # -- Admin MSP config name, the value should be a tar file named `admin-msp.tar` (TODO: Should be improved)
  adminMSPName: org1-admin-msp

# -- CPU/Memory resource requests/limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Currently autoscaling is unsupported
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

livenessProbe:
  # -- Whether to enable livenessProbe
  enabled: true
  # -- The livenessProbe timeout (in seconds)
  timeoutSeconds: 5
  # -- The livenessProbe success threshold
  successThreshold: 1
  # -- The livenessProbe failure threshold
  failureThreshold: 3
  # -- The livenessProbe initial delay (in seconds)
  initialDelaySeconds: 5
  # -- The livenessProbe period (in seconds)
  periodSeconds: 30

readinessProbe:
  # -- Whether to enable readinessProbe
  enabled: true
  # -- The readinessProbe timeout (in seconds)
  timeoutSeconds: 5
  # -- The readinessProbe success threshold
  successThreshold: 1
  # -- The readinessProbe failure threshold
  failureThreshold: 3
  # -- The readinessProbe initial delay (in seconds)
  initialDelaySeconds: 5
  # -- The readinessProbe period (in seconds)
  periodSeconds: 30